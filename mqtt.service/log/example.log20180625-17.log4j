2018-06-25 17:00:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:00:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:00:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:01:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:01:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:01:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:02:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:02:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:02:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:03:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:03:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:03:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:04:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:04:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:04:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:05:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:05:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:05:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:06:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:06:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:06:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:07:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:07:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:07:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:08:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:08:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:08:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:09:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:09:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:09:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:10:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:10:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:10:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:11:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:11:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:11:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:12:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:12:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:12:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:13:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:13:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:13:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:14:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:14:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:14:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:15:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:15:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:15:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:16:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:16:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:16:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:17:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:17:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:17:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:18:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:18:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:18:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:19:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:19:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:19:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:20:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:20:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:20:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:21:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:21:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:21:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:22:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:22:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:22:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:23:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:23:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:23:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:24:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:24:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:24:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:25:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:25:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:25:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:26:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:26:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:26:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:27:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:27:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:27:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:28:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:28:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:28:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:29:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:29:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:29:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:30:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:30:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:30:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:31:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:31:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:31:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:32:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:32:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:32:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:33:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:33:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:33:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:34:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:34:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:34:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:35:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:35:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:35:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:36:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:36:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:36:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:37:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:37:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:37:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:38:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:38:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:38:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:39:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:39:37 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:39:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:40:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:40:28 INFO main cj.mqtt.service.App - start ....
2018-06-25 17:40:33 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - connect ID: MQTT_FX_Client
2018-06-25 17:40:33 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - keep time:20
2018-06-25 17:40:36 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - subscribe: [MqttTopicSubscription[topicFilter=home/garden/fountain, qualityOfService=AT_MOST_ONCE]]
2018-06-25 17:40:39 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,2,home/garden/fountain,
2018-06-25 17:40:59 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:41:19 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:41:39 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:41:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,3,home/garden/fountain,
2018-06-25 17:42:17 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:42:28 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 断开连接-DISCONNECT: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=DISCONNECT, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:42:28 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - Channel:b425a1aa,掉线 [/127.0.0.1:50703, CID:MQTT_FX_Client,u:null]
2018-06-25 17:42:36 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - connect ID: MQTT_FX_Client
2018-06-25 17:42:36 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - keep time:60
2018-06-25 17:42:43 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,1,home/garden/fountain,
2018-06-25 17:43:06 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - subscribe: [MqttTopicSubscription[topicFilter=home/garden/fountain, qualityOfService=AT_LEAST_ONCE]]
2018-06-25 17:43:25 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,3,home/garden/fountain,
2018-06-25 17:43:59 DEBUG nioEventLoopGroup-3-2 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,4,home/garden/fountain,34534
2018-06-25 17:44:48 INFO main cj.mqtt.service.App - start ....
2018-06-25 17:44:51 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - connect ID: MQTT_FX_Client
2018-06-25 17:44:51 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - keep time:60
2018-06-25 17:44:53 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - subscribe: [MqttTopicSubscription[topicFilter=home/garden/fountain, qualityOfService=AT_LEAST_ONCE]]
2018-06-25 17:44:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,2,home/garden/fountain,34534
2018-06-25 17:44:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - this is puback message,MqttPubAckMessage[fixedHeader=MqttFixedHeader[messageType=PUBACK, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=2], variableHeader=MqttMessageIdVariableHeader[messageId=2], payload=]
2018-06-25 17:45:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:46:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:47:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:48:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:49:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:50:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:51:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:52:50 INFO main cj.mqtt.service.App - start ....
2018-06-25 17:52:55 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - connect ID: MQTT_FX_Client
2018-06-25 17:52:55 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - keep time:60
2018-06-25 17:52:57 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,1,home/garden/fountain,34534
2018-06-25 17:53:00 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - subscribe: [MqttTopicSubscription[topicFilter=home/garden/fountain, qualityOfService=AT_LEAST_ONCE]]
2018-06-25 17:53:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - publish:AT_LEAST_ONCE,3,home/garden/fountain,34534
2018-06-25 17:53:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - this is puback message,MqttPubAckMessage[fixedHeader=MqttFixedHeader[messageType=PUBACK, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=2], variableHeader=MqttMessageIdVariableHeader[messageId=3], payload=]
2018-06-25 17:54:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:55:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:56:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:57:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:58:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
2018-06-25 17:59:02 DEBUG nioEventLoopGroup-3-1 cj.mqtt.service.MqttServiceHandler - 心跳消息-PINGREQ: 
MqttMessage[fixedHeader=MqttFixedHeader[messageType=PINGREQ, isDup=false, qosLevel=AT_MOST_ONCE, isRetain=false, remainingLength=0], variableHeader=, payload=]
